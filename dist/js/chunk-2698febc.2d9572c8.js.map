{"version":3,"sources":["webpack:///./src/documents/develop.md","webpack:///./src/documents/change-log/README.md","webpack:///./src/views/develop.vue?fee1","webpack:///./src/views/develop.vue?6c38","webpack:///./src/views/develop.vue?aab5","webpack:///./src/views/develop.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","content","staticStyle","version","staticRenderFns","component","name"],"mappings":"oHAAAA,EAAOC,QAAU,01D,qBCAjBD,EAAOC,QAAU,oX,yCCAjB,IAAIC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,WAAW,CAACG,MAAM,CAAC,OAASP,EAAIQ,WAAWJ,EAAG,WAAW,CAACK,YAAY,CAAC,aAAa,QAAQF,MAAM,CAAC,OAASP,EAAIU,YAAY,IAC1PC,EAAkB,G,8mBCatB,OAAIC,UAAU,WAAY,QAI1B,IAAqB,EAArB,4F,0BACS,EAAAJ,QAAe,IACf,EAAAE,QAAe,IAFxB,YAAkC,QAAb,EAAI,gBAHxB,eAAU,CACTG,KAAM,UAEa,WClB6W,I,YCO9XD,EAAY,eACd,EACAb,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-2698febc.2d9572c8.js","sourcesContent":["module.exports = \"<h1 id=\\\"组件开发说明\\\">组件开发说明</h1>\\n<h2 id=\\\"创建组件目录\\\">创建组件目录</h2>\\n<p>在src/packages目录下创建新的文件夹作为组件目录，文件夹的名称为组件名称，命名方式为-连接小写单词，不允许使用大写</p>\\n<p>使用命令行创建组件目录 <code> npm run create 组件名 组件中文名 类型</code></p>\\n<p>类型: <code> tool | component | directive </code></p>\\n<p>示例: <code> npm run create m-button 按钮 component</code></p>\\n<p>组件的目录结构如下：</p>\\n<p>UI组件命名特别说明：</p>\\n<ul>\\n<li>移动端UI组件以M开头，例如MInput</li>\\n<li>PC端UI组件以D开头，例如DInput</li>\\n<li>通用UI组件以Ae开头，例如AeInput</li>\\n</ul>\\n<pre><code class=\\\"language-html\\\">component-name（示例）//组件名称 \\n│ \\n├─src  // 组件代码文件夹  \\n│  │   \\n│  └─index.ts(x) 或 index.vue 必须提供\\n│\\n├─demo  // 必须提供，示例文件夹，必须包含至少一个示例 \\n│  │   \\n│  ├─demo1  示例1文件夹\\n│  │   │\\n│  │   ├─index.vue 必须提供，示例1组件\\n│  │   │\\n│  │   └─index.md 必须提供，示例1说明\\n│  │\\n│  ├─demo2   示例2文件夹\\n│  │   │\\n│  │   ├─index.vue 示例2组件\\n│  │   │\\n│  │   └─index.md 示例说明\\n│  │\\n│  ├─index.vue 准备好其他文件之后运行npm run docs即可生成\\n│  │\\n│  ├─README.md 必须提供，组件的基本介绍\\n│  │\\n│  ├─props.md UI组件的Props说明（按需要提供）\\n│  │\\n│  ├─events.md 组件的事件说明（按需要提供）\\n│  │\\n│  ├─functions.md 组件的对外暴露的方法说明（按需要提供）\\n│  │\\n│  └─slots.md 组件的插槽说明（按需要提供）\\n│\\n└─index.ts // 必须提供，对外暴露文件，默认暴露的对象必须具有install方法 </code></pre>\\n<blockquote>\\n<p>如果添加的是UI组件，命名直接使用组件名称\\n如果添加的是vue指令组件，命名使用 xxx-directive</p>\\n</blockquote>\\n<h3 id=\\\"编写组件文件\\\">编写组件文件</h3>\\n<ol>\\n<li>在组件文件夹下创建src文件夹</li>\\n<li>在组件文件夹下创建index.ts</li>\\n<li>在第1步中创建的src文件夹下创建index.vue（UI组件）或index.ts（指令或其他类型组件）文件</li>\\n<li>编写代码</li>\\n</ol>\\n<h2 id=\\\"编写组件示例\\\">编写组件示例</h2>\\n<ol>\\n<li>在组件文件夹下创建demo文件夹</li>\\n<li>在demo文件夹下创建README.md</li>\\n<li>每组示例在demo文件夹下分别创建demo1、demo2等文件夹</li>\\n<li>在demo1、demo2等文件夹下创建index.md、index.vue文件</li>\\n<li>index.vue为示例组件、index.md为示例说明</li>\\n</ol>\\n<h2 id=\\\"生成组件文档\\\">生成组件文档</h2>\\n<p>生成文档需要在组件代码编写完成后运行一次</p>\\n<p>运行以下命令</p>\\n<pre><code>npm run docs</code></pre><blockquote>\\n<p>如果添加了新的示例或修改了示例的代码时需要重新运行生成文档的命令\\n修改.md文件不需要重新生成文档\\n修改已存在的示例代码在开发时可以实时看到运行效果，只是文档中的示例代码会不同步</p>\\n</blockquote>\\n\";","module.exports = \"<h1 id=\\\"更新日志维护说明\\\">更新日志维护说明</h1>\\n<ul>\\n<li>每增加一个新的版本，须在map.json中添加版本的信息</li>\\n</ul>\\n<p>map.json的内容如下：</p>\\n<pre><code class=\\\"language-json\\\">{\\n  &quot;0.1.0&quot;: {\\n    &quot;time&quot;: &quot;2019-04-06&quot;\\n  },\\n  &quot;0.1.1&quot;: {\\n    &quot;time&quot;: &quot;2019-04-07&quot;\\n  }\\n}</code></pre>\\n<ul>\\n<li>在当前文件加下添加 <code><版本号>.md</code>文件</li>\\n</ul>\\n\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('markdown',{attrs:{\"source\":_vm.content}}),_c('markdown',{staticStyle:{\"margin-top\":\"50px\"},attrs:{\"source\":_vm.version}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\nimport Markdown from '@/components/markdown.vue';\nimport '@/styles/github-markdown.less';\nimport {Component, Vue} from 'vue-property-decorator';\nimport version from '../documents/change-log/README.md';\nimport md from '../documents/develop.md';\n\nVue.component('Markdown', Markdown);\n@Component({\n  name: 'Home'\n})\nexport default class Home extends Vue {\n  public content: any = md;\n  public version: any = version;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./develop.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./develop.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./develop.vue?vue&type=template&id=1dff6ad6&\"\nimport script from \"./develop.vue?vue&type=script&lang=ts&\"\nexport * from \"./develop.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}